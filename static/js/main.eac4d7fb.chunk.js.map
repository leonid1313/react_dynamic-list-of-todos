{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","utils/request.js","App.jsx","index.js"],"names":["TodoList","todos","onClick","className","length","map","todo","completed","key","id","type","checked","readOnly","title","name","userId","CurrentUser","user","email","phone","UserTodos","url","fetch","then","response","json","data","filter","App","state","selectedUserId","inputValue","selectValue","showUser","event","setState","target","clearUser","onChange","value","onChangeStatus","prevProps","prevState","this","undefined","filteredTodos","includes","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eac4d7fb.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({ todos, onClick }) => (\n  <div className=\"TodoList\">\n    <h2>{`Todos: ${todos.length}`}</h2>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={`\n            TodoList__item\n            TodoList__item${todo.completed\n              ? '--checked'\n              : '--unchecked'}`\n            }\n            key={todo.id}\n          >\n            <label>\n              <input type=\"checkbox\" checked={todo.completed} readOnly />\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className=\"TodoList__user-button--selected button\"\n              type=\"button\"\n              name={todo.userId}\n              onClick={onClick}\n            >\n              {`User ${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  })).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({ user, onClick }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        {`Selected user: ${user.id}`}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      type=\"button\"\n      onClick={onClick}\n      className=\"button-clear\"\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","const USERS_URL = `https://mate-api.herokuapp.com/users/`;\nconst BASE_URL = `https://mate-api.herokuapp.com`;\n\nexport function getUser(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json())\n    .then(todos => todos.data.filter(todo => todo.userId && todo.title));\n}\n\nexport function users(url) {\n  return fetch(`${USERS_URL}${url}`)\n    .then(response => response.json());\n}\n\nexport const UserTodos = () => getUser('/todos');\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { UserTodos, users } from './utils';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    user: {},\n    inputValue: '',\n    selectValue: '',\n    completed: null,\n  };\n\n  componentDidMount() {\n    UserTodos()\n      .then(todos => this.setState({\n        todos,\n      }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { selectedUserId } = this.state;\n\n    if (prevState.selectedUserId !== selectedUserId) {\n      users(selectedUserId)\n        .then((user) => {\n          if (user.data !== null && user.data !== undefined) {\n            this.setState({ user: user.data });\n          }\n        });\n    }\n  }\n\n  showUser = (event) => {\n    this.setState({ selectedUserId: event.target.name });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  onChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  }\n\n  onChangeStatus = (event) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case 'all':\n        this.setState({\n          selectValue: value,\n          completed: null,\n        });\n        break;\n\n      case 'completed':\n        this.setState({\n          selectValue: value,\n          completed: false,\n        });\n        break;\n\n      case 'not completed':\n        this.setState({\n          selectValue: value,\n          completed: true,\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      user,\n      inputValue,\n      selectValue,\n      completed,\n    } = this.state;\n\n    const filteredTodos = todos.filter(\n      todo => todo.title.includes(inputValue),\n    ).filter(todo => todo.completed !== completed);\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <input\n            value={inputValue}\n            onChange={this.onChange}\n            placeholder=\"Search\"\n          />\n          <select onChange={this.onChangeStatus} value={selectValue}>\n            <option value=\"all\">\n              Show all\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n            <option value=\"not completed\">\n              Not completed\n            </option>\n          </select>\n          <TodoList todos={filteredTodos} onClick={this.showUser} />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={user}\n                onClick={this.clearUser}\n              />\n            ) : (\n              <h1 className=\"title\">No selected user</h1>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}